plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.ecommerce.user'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Spring Security dependencies
	implementation 'org.springframework.security:spring-security-web'
	implementation 'org.springframework.security:spring-security-core'
	implementation 'org.springframework.security:spring-security-config'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'


	implementation 'org.projectlombok:lombok:1.18.22'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'

	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}

ext {
	set('springCloudVersion', "2023.0.3")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file("src/generated/java")
}


sourceSets {
	generated {
		java {
			srcDirs = ['src/generated/java']
		}
	}
}
